{
	"openapi": "3.0.3",
	"info": {
		"title": "Swagger Petstore - OpenAPI 3.0",
		"description": "This is a sample Pet Store Server based on the OpenAPI 3.0 specification.  You can find out more about\nSwagger at [https://swagger.io](https://swagger.io). In the third iteration of the pet store, we've switched to the design first approach!\nYou can now help us improve the API whether it's by making changes to the definition itself or to the code.\nThat way, with time, we can improve the API in general, and expose some of the new features in OAS3.\n\nSome useful links:\n- [The Pet Store repository](https://github.com/swagger-api/swagger-petstore)\n- [The source API definition for the Pet Store](https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml)",
		"termsOfService": "http://swagger.io/terms/",
		"contact": {
			"email": "apiteam@swagger.io"
		},
		"license": {
			"name": "Apache 2.0",
			"url": "http://www.apache.org/licenses/LICENSE-2.0.html"
		},
		"version": "1.0.11"
	},
	"externalDocs": {
		"description": "Find out more about Swagger",
		"url": "http://swagger.io"
	},
	"servers": [
		{
			"url": "https://petstore3.swagger.io/api/v3"
		}
	],
	"tags": [
		{
			"name": "pet",
			"description": "Everything about your Pets",
			"externalDocs": {
				"description": "Find out more",
				"url": "http://swagger.io"
			}
		},
		{
			"name": "store",
			"description": "Access to Petstore orders",
			"externalDocs": {
				"description": "Find out more about our store",
				"url": "http://swagger.io"
			}
		},
		{
			"name": "user",
			"description": "Operations about user"
		}
	],
	"paths": {
		"/pet": {
			"put": {
				"tags": [
					"pet"
				],
				"summary": "Update an existing pet",
				"description": "Update an existing pet by Id",
				"operationId": "updatePet",
				"requestBody": {
					"description": "Update an existent pet in the store",
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Pet"
							}
						},
						"application/xml": {
							"schema": {
								"$ref": "#/components/schemas/Pet"
							}
						},
						"application/x-www-form-urlencoded": {
							"schema": {
								"$ref": "#/components/schemas/Pet"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful operation",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Pet"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/Pet"
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied"
					},
					"404": {
						"description": "Pet not found"
					},
					"405": {
						"description": "Validation exception"
					}
				},
				"security": [
					{
						"petstore_auth": [
							"write:pets",
							"read:pets"
						]
					}
				],
				"x-codeSamples": [
					{
						"lang": "Node + Request",
						"source": "const request = require('request');\n\nconst options = {\n  method: 'PUT',\n  url: 'https://petstore3.swagger.io/api/v3/pet',\n  headers: {\n    'content-type': 'application/x-www-form-urlencoded',\n    Authorization: 'Bearer REPLACE_BEARER_TOKEN'\n  },\n  body: {\n    id: 10,\n    name: 'doggie',\n    category: {id: 1, name: 'Dogs'},\n    photoUrls: ['string'],\n    tags: [{id: 0, name: 'string'}],\n    status: 'available'\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
					},
					{
						"lang": "Shell + Curl",
						"source": "curl --request PUT \\\n  --url https://petstore3.swagger.io/api/v3/pet \\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \\\n  --header 'content-type: application/x-www-form-urlencoded' \\\n  --data '{\"id\":10,\"name\":\"doggie\",\"category\":{\"id\":1,\"name\":\"Dogs\"},\"photoUrls\":[\"string\"],\"tags\":[{\"id\":0,\"name\":\"string\"}],\"status\":\"available\"}'"
					},
					{
						"lang": "Shell + Httpie",
						"source": "echo '{\"id\":10,\"name\":\"doggie\",\"category\":{\"id\":1,\"name\":\"Dogs\"},\"photoUrls\":[\"string\"],\"tags\":[{\"id\":0,\"name\":\"string\"}],\"status\":\"available\"}' |  \\\n  http PUT https://petstore3.swagger.io/api/v3/pet \\\n  Authorization:'Bearer REPLACE_BEARER_TOKEN' \\\n  content-type:application/x-www-form-urlencoded"
					},
					{
						"lang": "Python + Python3",
						"source": "import http.client\n\nconn = http.client.HTTPSConnection(\"petstore3.swagger.io\")\n\npayload = \"{\\\"id\\\":10,\\\"name\\\":\\\"doggie\\\",\\\"category\\\":{\\\"id\\\":1,\\\"name\\\":\\\"Dogs\\\"},\\\"photoUrls\\\":[\\\"string\\\"],\\\"tags\\\":[{\\\"id\\\":0,\\\"name\\\":\\\"string\\\"}],\\\"status\\\":\\\"available\\\"}\"\n\nheaders = {\n    'content-type': \"application/x-www-form-urlencoded\",\n    'Authorization': \"Bearer REPLACE_BEARER_TOKEN\"\n    }\n\nconn.request(\"PUT\", \"/api/v3/pet\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
					},
					{
						"lang": "Php + Curl",
						"source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://petstore3.swagger.io/api/v3/pet\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"PUT\",\n  CURLOPT_POSTFIELDS => \"{\\\"id\\\":10,\\\"name\\\":\\\"doggie\\\",\\\"category\\\":{\\\"id\\\":1,\\\"name\\\":\\\"Dogs\\\"},\\\"photoUrls\\\":[\\\"string\\\"],\\\"tags\\\":[{\\\"id\\\":0,\\\"name\\\":\\\"string\\\"}],\\\"status\\\":\\\"available\\\"}\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: Bearer REPLACE_BEARER_TOKEN\",\n    \"content-type: application/x-www-form-urlencoded\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
					},
					{
						"lang": "Php + Http1",
						"source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://petstore3.swagger.io/api/v3/pet');\n$request->setMethod(HTTP_METH_PUT);\n\n$request->setHeaders([\n  'content-type' => 'application/x-www-form-urlencoded',\n  'Authorization' => 'Bearer REPLACE_BEARER_TOKEN'\n]);\n\n$request->setBody('{\"id\":10,\"name\":\"doggie\",\"category\":{\"id\":1,\"name\":\"Dogs\"},\"photoUrls\":[\"string\"],\"tags\":[{\"id\":0,\"name\":\"string\"}],\"status\":\"available\"}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
					},
					{
						"lang": "Php + Http2",
						"source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"id\":10,\"name\":\"doggie\",\"category\":{\"id\":1,\"name\":\"Dogs\"},\"photoUrls\":[\"string\"],\"tags\":[{\"id\":0,\"name\":\"string\"}],\"status\":\"available\"}');\n\n$request->setRequestUrl('https://petstore3.swagger.io/api/v3/pet');\n$request->setRequestMethod('PUT');\n$request->setBody($body);\n\n$request->setHeaders([\n  'content-type' => 'application/x-www-form-urlencoded',\n  'Authorization' => 'Bearer REPLACE_BEARER_TOKEN'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
					}
				]
			},
			"post": {
				"tags": [
					"pet"
				],
				"summary": "Add a new pet to the store",
				"description": "Add a new pet to the store",
				"operationId": "addPet",
				"requestBody": {
					"description": "Create a new pet in the store",
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Pet"
							}
						},
						"application/xml": {
							"schema": {
								"$ref": "#/components/schemas/Pet"
							}
						},
						"application/x-www-form-urlencoded": {
							"schema": {
								"$ref": "#/components/schemas/Pet"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful operation",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Pet"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/Pet"
								}
							}
						}
					},
					"405": {
						"description": "Invalid input"
					}
				},
				"security": [
					{
						"petstore_auth": [
							"write:pets",
							"read:pets"
						]
					}
				],
				"x-codeSamples": [
					{
						"lang": "Node + Request",
						"source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://petstore3.swagger.io/api/v3/pet',\n  headers: {\n    'content-type': 'application/x-www-form-urlencoded',\n    Authorization: 'Bearer REPLACE_BEARER_TOKEN'\n  },\n  body: {\n    id: 10,\n    name: 'doggie',\n    category: {id: 1, name: 'Dogs'},\n    photoUrls: ['string'],\n    tags: [{id: 0, name: 'string'}],\n    status: 'available'\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
					},
					{
						"lang": "Shell + Curl",
						"source": "curl --request POST \\\n  --url https://petstore3.swagger.io/api/v3/pet \\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \\\n  --header 'content-type: application/x-www-form-urlencoded' \\\n  --data '{\"id\":10,\"name\":\"doggie\",\"category\":{\"id\":1,\"name\":\"Dogs\"},\"photoUrls\":[\"string\"],\"tags\":[{\"id\":0,\"name\":\"string\"}],\"status\":\"available\"}'"
					},
					{
						"lang": "Shell + Httpie",
						"source": "echo '{\"id\":10,\"name\":\"doggie\",\"category\":{\"id\":1,\"name\":\"Dogs\"},\"photoUrls\":[\"string\"],\"tags\":[{\"id\":0,\"name\":\"string\"}],\"status\":\"available\"}' |  \\\n  http POST https://petstore3.swagger.io/api/v3/pet \\\n  Authorization:'Bearer REPLACE_BEARER_TOKEN' \\\n  content-type:application/x-www-form-urlencoded"
					},
					{
						"lang": "Python + Python3",
						"source": "import http.client\n\nconn = http.client.HTTPSConnection(\"petstore3.swagger.io\")\n\npayload = \"{\\\"id\\\":10,\\\"name\\\":\\\"doggie\\\",\\\"category\\\":{\\\"id\\\":1,\\\"name\\\":\\\"Dogs\\\"},\\\"photoUrls\\\":[\\\"string\\\"],\\\"tags\\\":[{\\\"id\\\":0,\\\"name\\\":\\\"string\\\"}],\\\"status\\\":\\\"available\\\"}\"\n\nheaders = {\n    'content-type': \"application/x-www-form-urlencoded\",\n    'Authorization': \"Bearer REPLACE_BEARER_TOKEN\"\n    }\n\nconn.request(\"POST\", \"/api/v3/pet\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
					},
					{
						"lang": "Php + Curl",
						"source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://petstore3.swagger.io/api/v3/pet\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"id\\\":10,\\\"name\\\":\\\"doggie\\\",\\\"category\\\":{\\\"id\\\":1,\\\"name\\\":\\\"Dogs\\\"},\\\"photoUrls\\\":[\\\"string\\\"],\\\"tags\\\":[{\\\"id\\\":0,\\\"name\\\":\\\"string\\\"}],\\\"status\\\":\\\"available\\\"}\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: Bearer REPLACE_BEARER_TOKEN\",\n    \"content-type: application/x-www-form-urlencoded\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
					},
					{
						"lang": "Php + Http1",
						"source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://petstore3.swagger.io/api/v3/pet');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders([\n  'content-type' => 'application/x-www-form-urlencoded',\n  'Authorization' => 'Bearer REPLACE_BEARER_TOKEN'\n]);\n\n$request->setBody('{\"id\":10,\"name\":\"doggie\",\"category\":{\"id\":1,\"name\":\"Dogs\"},\"photoUrls\":[\"string\"],\"tags\":[{\"id\":0,\"name\":\"string\"}],\"status\":\"available\"}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
					},
					{
						"lang": "Php + Http2",
						"source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"id\":10,\"name\":\"doggie\",\"category\":{\"id\":1,\"name\":\"Dogs\"},\"photoUrls\":[\"string\"],\"tags\":[{\"id\":0,\"name\":\"string\"}],\"status\":\"available\"}');\n\n$request->setRequestUrl('https://petstore3.swagger.io/api/v3/pet');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders([\n  'content-type' => 'application/x-www-form-urlencoded',\n  'Authorization' => 'Bearer REPLACE_BEARER_TOKEN'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
					}
				]
			}
		},
		"/pet/findByStatus": {
			"get": {
				"tags": [
					"pet"
				],
				"summary": "Finds Pets by status",
				"description": "Multiple status values can be provided with comma separated strings",
				"operationId": "findPetsByStatus",
				"parameters": [
					{
						"name": "status",
						"in": "query",
						"description": "Status values that need to be considered for filter",
						"required": false,
						"explode": true,
						"schema": {
							"type": "string",
							"default": "available",
							"enum": [
								"available",
								"pending",
								"sold"
							]
						}
					}
				],
				"responses": {
					"200": {
						"description": "successful operation",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/Pet"
									}
								}
							},
							"application/xml": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/Pet"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid status value"
					}
				},
				"security": [
					{
						"petstore_auth": [
							"write:pets",
							"read:pets"
						]
					}
				],
				"x-codeSamples": [
					{
						"lang": "Node + Request",
						"source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://petstore3.swagger.io/api/v3/pet/findByStatus',\n  qs: {status: 'SOME_STRING_VALUE'},\n  headers: {Authorization: 'Bearer REPLACE_BEARER_TOKEN'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
					},
					{
						"lang": "Shell + Curl",
						"source": "curl --request GET \\\n  --url 'https://petstore3.swagger.io/api/v3/pet/findByStatus?status=SOME_STRING_VALUE' \\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'"
					},
					{
						"lang": "Shell + Httpie",
						"source": "http GET 'https://petstore3.swagger.io/api/v3/pet/findByStatus?status=SOME_STRING_VALUE' \\\n  Authorization:'Bearer REPLACE_BEARER_TOKEN'"
					},
					{
						"lang": "Python + Python3",
						"source": "import http.client\n\nconn = http.client.HTTPSConnection(\"petstore3.swagger.io\")\n\nheaders = { 'Authorization': \"Bearer REPLACE_BEARER_TOKEN\" }\n\nconn.request(\"GET\", \"/api/v3/pet/findByStatus?status=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
					},
					{
						"lang": "Php + Curl",
						"source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://petstore3.swagger.io/api/v3/pet/findByStatus?status=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: Bearer REPLACE_BEARER_TOKEN\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
					},
					{
						"lang": "Php + Http1",
						"source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://petstore3.swagger.io/api/v3/pet/findByStatus');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData([\n  'status' => 'SOME_STRING_VALUE'\n]);\n\n$request->setHeaders([\n  'Authorization' => 'Bearer REPLACE_BEARER_TOKEN'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
					},
					{
						"lang": "Php + Http2",
						"source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://petstore3.swagger.io/api/v3/pet/findByStatus');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString([\n  'status' => 'SOME_STRING_VALUE'\n]));\n\n$request->setHeaders([\n  'Authorization' => 'Bearer REPLACE_BEARER_TOKEN'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
					}
				]
			}
		},
		"/pet/findByTags": {
			"get": {
				"tags": [
					"pet"
				],
				"summary": "Finds Pets by tags",
				"description": "Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.",
				"operationId": "findPetsByTags",
				"parameters": [
					{
						"name": "tags",
						"in": "query",
						"description": "Tags to filter by",
						"required": false,
						"explode": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "successful operation",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/Pet"
									}
								}
							},
							"application/xml": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/Pet"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid tag value"
					}
				},
				"security": [
					{
						"petstore_auth": [
							"write:pets",
							"read:pets"
						]
					}
				],
				"x-codeSamples": [
					{
						"lang": "Node + Request",
						"source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://petstore3.swagger.io/api/v3/pet/findByTags',\n  qs: {tags: 'SOME_ARRAY_VALUE'},\n  headers: {Authorization: 'Bearer REPLACE_BEARER_TOKEN'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
					},
					{
						"lang": "Shell + Curl",
						"source": "curl --request GET \\\n  --url 'https://petstore3.swagger.io/api/v3/pet/findByTags?tags=SOME_ARRAY_VALUE' \\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'"
					},
					{
						"lang": "Shell + Httpie",
						"source": "http GET 'https://petstore3.swagger.io/api/v3/pet/findByTags?tags=SOME_ARRAY_VALUE' \\\n  Authorization:'Bearer REPLACE_BEARER_TOKEN'"
					},
					{
						"lang": "Python + Python3",
						"source": "import http.client\n\nconn = http.client.HTTPSConnection(\"petstore3.swagger.io\")\n\nheaders = { 'Authorization': \"Bearer REPLACE_BEARER_TOKEN\" }\n\nconn.request(\"GET\", \"/api/v3/pet/findByTags?tags=SOME_ARRAY_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
					},
					{
						"lang": "Php + Curl",
						"source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://petstore3.swagger.io/api/v3/pet/findByTags?tags=SOME_ARRAY_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: Bearer REPLACE_BEARER_TOKEN\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
					},
					{
						"lang": "Php + Http1",
						"source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://petstore3.swagger.io/api/v3/pet/findByTags');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData([\n  'tags' => 'SOME_ARRAY_VALUE'\n]);\n\n$request->setHeaders([\n  'Authorization' => 'Bearer REPLACE_BEARER_TOKEN'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
					},
					{
						"lang": "Php + Http2",
						"source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://petstore3.swagger.io/api/v3/pet/findByTags');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString([\n  'tags' => 'SOME_ARRAY_VALUE'\n]));\n\n$request->setHeaders([\n  'Authorization' => 'Bearer REPLACE_BEARER_TOKEN'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
					}
				]
			}
		},
		"/pet/{petId}": {
			"get": {
				"tags": [
					"pet"
				],
				"summary": "Find pet by ID",
				"description": "Returns a single pet",
				"operationId": "getPetById",
				"parameters": [
					{
						"name": "petId",
						"in": "path",
						"description": "ID of pet to return",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					}
				],
				"responses": {
					"200": {
						"description": "successful operation",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Pet"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/Pet"
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied"
					},
					"404": {
						"description": "Pet not found"
					}
				},
				"security": [
					{
						"api_key": []
					},
					{
						"petstore_auth": [
							"write:pets",
							"read:pets"
						]
					}
				],
				"x-codeSamples": [
					{
						"lang": "Node + Request",
						"source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://petstore3.swagger.io/api/v3/pet/%7BpetId%7D',\n  headers: {api_key: 'REPLACE_KEY_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
					},
					{
						"lang": "Shell + Curl",
						"source": "curl --request GET \\\n  --url https://petstore3.swagger.io/api/v3/pet/%7BpetId%7D \\\n  --header 'api_key: REPLACE_KEY_VALUE'"
					},
					{
						"lang": "Shell + Httpie",
						"source": "http GET https://petstore3.swagger.io/api/v3/pet/%7BpetId%7D \\\n  api_key:REPLACE_KEY_VALUE"
					},
					{
						"lang": "Python + Python3",
						"source": "import http.client\n\nconn = http.client.HTTPSConnection(\"petstore3.swagger.io\")\n\nheaders = { 'api_key': \"REPLACE_KEY_VALUE\" }\n\nconn.request(\"GET\", \"/api/v3/pet/%7BpetId%7D\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
					},
					{
						"lang": "Php + Curl",
						"source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://petstore3.swagger.io/api/v3/pet/%7BpetId%7D\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"api_key: REPLACE_KEY_VALUE\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
					},
					{
						"lang": "Php + Http1",
						"source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://petstore3.swagger.io/api/v3/pet/%7BpetId%7D');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders([\n  'api_key' => 'REPLACE_KEY_VALUE'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
					},
					{
						"lang": "Php + Http2",
						"source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://petstore3.swagger.io/api/v3/pet/%7BpetId%7D');\n$request->setRequestMethod('GET');\n$request->setHeaders([\n  'api_key' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
					}
				]
			},
			"post": {
				"tags": [
					"pet"
				],
				"summary": "Updates a pet in the store with form data",
				"description": "",
				"operationId": "updatePetWithForm",
				"parameters": [
					{
						"name": "petId",
						"in": "path",
						"description": "ID of pet that needs to be updated",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					},
					{
						"name": "name",
						"in": "query",
						"description": "Name of pet that needs to be updated",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "status",
						"in": "query",
						"description": "Status of pet that needs to be updated",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"405": {
						"description": "Invalid input"
					}
				},
				"security": [
					{
						"petstore_auth": [
							"write:pets",
							"read:pets"
						]
					}
				],
				"x-codeSamples": [
					{
						"lang": "Node + Request",
						"source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://petstore3.swagger.io/api/v3/pet/%7BpetId%7D',\n  qs: {name: 'SOME_STRING_VALUE', status: 'SOME_STRING_VALUE'},\n  headers: {Authorization: 'Bearer REPLACE_BEARER_TOKEN'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
					},
					{
						"lang": "Shell + Curl",
						"source": "curl --request POST \\\n  --url 'https://petstore3.swagger.io/api/v3/pet/%7BpetId%7D?name=SOME_STRING_VALUE&status=SOME_STRING_VALUE' \\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'"
					},
					{
						"lang": "Shell + Httpie",
						"source": "http POST 'https://petstore3.swagger.io/api/v3/pet/%7BpetId%7D?name=SOME_STRING_VALUE&status=SOME_STRING_VALUE' \\\n  Authorization:'Bearer REPLACE_BEARER_TOKEN'"
					},
					{
						"lang": "Python + Python3",
						"source": "import http.client\n\nconn = http.client.HTTPSConnection(\"petstore3.swagger.io\")\n\nheaders = { 'Authorization': \"Bearer REPLACE_BEARER_TOKEN\" }\n\nconn.request(\"POST\", \"/api/v3/pet/%7BpetId%7D?name=SOME_STRING_VALUE&status=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
					},
					{
						"lang": "Php + Curl",
						"source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://petstore3.swagger.io/api/v3/pet/%7BpetId%7D?name=SOME_STRING_VALUE&status=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: Bearer REPLACE_BEARER_TOKEN\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
					},
					{
						"lang": "Php + Http1",
						"source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://petstore3.swagger.io/api/v3/pet/%7BpetId%7D');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setQueryData([\n  'name' => 'SOME_STRING_VALUE',\n  'status' => 'SOME_STRING_VALUE'\n]);\n\n$request->setHeaders([\n  'Authorization' => 'Bearer REPLACE_BEARER_TOKEN'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
					},
					{
						"lang": "Php + Http2",
						"source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://petstore3.swagger.io/api/v3/pet/%7BpetId%7D');\n$request->setRequestMethod('POST');\n$request->setQuery(new http\\QueryString([\n  'name' => 'SOME_STRING_VALUE',\n  'status' => 'SOME_STRING_VALUE'\n]));\n\n$request->setHeaders([\n  'Authorization' => 'Bearer REPLACE_BEARER_TOKEN'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
					}
				]
			},
			"delete": {
				"tags": [
					"pet"
				],
				"summary": "Deletes a pet",
				"description": "delete a pet",
				"operationId": "deletePet",
				"parameters": [
					{
						"name": "api_key",
						"in": "header",
						"description": "",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "petId",
						"in": "path",
						"description": "Pet id to delete",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					}
				],
				"responses": {
					"400": {
						"description": "Invalid pet value"
					}
				},
				"security": [
					{
						"petstore_auth": [
							"write:pets",
							"read:pets"
						]
					}
				],
				"x-codeSamples": [
					{
						"lang": "Node + Request",
						"source": "const request = require('request');\n\nconst options = {\n  method: 'DELETE',\n  url: 'https://petstore3.swagger.io/api/v3/pet/%7BpetId%7D',\n  headers: {api_key: 'SOME_STRING_VALUE', Authorization: 'Bearer REPLACE_BEARER_TOKEN'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
					},
					{
						"lang": "Shell + Curl",
						"source": "curl --request DELETE \\\n  --url https://petstore3.swagger.io/api/v3/pet/%7BpetId%7D \\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \\\n  --header 'api_key: SOME_STRING_VALUE'"
					},
					{
						"lang": "Shell + Httpie",
						"source": "http DELETE https://petstore3.swagger.io/api/v3/pet/%7BpetId%7D \\\n  Authorization:'Bearer REPLACE_BEARER_TOKEN' \\\n  api_key:SOME_STRING_VALUE"
					},
					{
						"lang": "Python + Python3",
						"source": "import http.client\n\nconn = http.client.HTTPSConnection(\"petstore3.swagger.io\")\n\nheaders = {\n    'api_key': \"SOME_STRING_VALUE\",\n    'Authorization': \"Bearer REPLACE_BEARER_TOKEN\"\n    }\n\nconn.request(\"DELETE\", \"/api/v3/pet/%7BpetId%7D\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
					},
					{
						"lang": "Php + Curl",
						"source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://petstore3.swagger.io/api/v3/pet/%7BpetId%7D\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"DELETE\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: Bearer REPLACE_BEARER_TOKEN\",\n    \"api_key: SOME_STRING_VALUE\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
					},
					{
						"lang": "Php + Http1",
						"source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://petstore3.swagger.io/api/v3/pet/%7BpetId%7D');\n$request->setMethod(HTTP_METH_DELETE);\n\n$request->setHeaders([\n  'api_key' => 'SOME_STRING_VALUE',\n  'Authorization' => 'Bearer REPLACE_BEARER_TOKEN'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
					},
					{
						"lang": "Php + Http2",
						"source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://petstore3.swagger.io/api/v3/pet/%7BpetId%7D');\n$request->setRequestMethod('DELETE');\n$request->setHeaders([\n  'api_key' => 'SOME_STRING_VALUE',\n  'Authorization' => 'Bearer REPLACE_BEARER_TOKEN'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
					}
				]
			}
		},
		"/pet/{petId}/uploadImage": {
			"post": {
				"tags": [
					"pet"
				],
				"summary": "uploads an image",
				"description": "",
				"operationId": "uploadFile",
				"parameters": [
					{
						"name": "petId",
						"in": "path",
						"description": "ID of pet to update",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					},
					{
						"name": "additionalMetadata",
						"in": "query",
						"description": "Additional Metadata",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/octet-stream": {
							"schema": {
								"type": "string",
								"format": "binary"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "successful operation",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse"
								}
							}
						}
					}
				},
				"security": [
					{
						"petstore_auth": [
							"write:pets",
							"read:pets"
						]
					}
				],
				"x-codeSamples": [
					{
						"lang": "Node + Request",
						"source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://petstore3.swagger.io/api/v3/pet/%7BpetId%7D/uploadImage',\n  qs: {additionalMetadata: 'SOME_STRING_VALUE'},\n  headers: {\n    'content-type': 'application/octet-stream',\n    Authorization: 'Bearer REPLACE_BEARER_TOKEN'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
					},
					{
						"lang": "Shell + Curl",
						"source": "curl --request POST \\\n  --url 'https://petstore3.swagger.io/api/v3/pet/%7BpetId%7D/uploadImage?additionalMetadata=SOME_STRING_VALUE' \\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \\\n  --header 'content-type: application/octet-stream'"
					},
					{
						"lang": "Shell + Httpie",
						"source": "http POST 'https://petstore3.swagger.io/api/v3/pet/%7BpetId%7D/uploadImage?additionalMetadata=SOME_STRING_VALUE' \\\n  Authorization:'Bearer REPLACE_BEARER_TOKEN' \\\n  content-type:application/octet-stream"
					},
					{
						"lang": "Python + Python3",
						"source": "import http.client\n\nconn = http.client.HTTPSConnection(\"petstore3.swagger.io\")\n\nheaders = {\n    'content-type': \"application/octet-stream\",\n    'Authorization': \"Bearer REPLACE_BEARER_TOKEN\"\n    }\n\nconn.request(\"POST\", \"/api/v3/pet/%7BpetId%7D/uploadImage?additionalMetadata=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
					},
					{
						"lang": "Php + Curl",
						"source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://petstore3.swagger.io/api/v3/pet/%7BpetId%7D/uploadImage?additionalMetadata=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: Bearer REPLACE_BEARER_TOKEN\",\n    \"content-type: application/octet-stream\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
					},
					{
						"lang": "Php + Http1",
						"source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://petstore3.swagger.io/api/v3/pet/%7BpetId%7D/uploadImage');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setQueryData([\n  'additionalMetadata' => 'SOME_STRING_VALUE'\n]);\n\n$request->setHeaders([\n  'content-type' => 'application/octet-stream',\n  'Authorization' => 'Bearer REPLACE_BEARER_TOKEN'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
					},
					{
						"lang": "Php + Http2",
						"source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://petstore3.swagger.io/api/v3/pet/%7BpetId%7D/uploadImage');\n$request->setRequestMethod('POST');\n$request->setQuery(new http\\QueryString([\n  'additionalMetadata' => 'SOME_STRING_VALUE'\n]));\n\n$request->setHeaders([\n  'content-type' => 'application/octet-stream',\n  'Authorization' => 'Bearer REPLACE_BEARER_TOKEN'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
					}
				]
			}
		},
		"/store/inventory": {
			"get": {
				"tags": [
					"store"
				],
				"summary": "Returns pet inventories by status",
				"description": "Returns a map of status codes to quantities",
				"operationId": "getInventory",
				"responses": {
					"200": {
						"description": "successful operation",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"additionalProperties": {
										"type": "integer",
										"format": "int32"
									}
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": []
					}
				],
				"x-codeSamples": [
					{
						"lang": "Node + Request",
						"source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://petstore3.swagger.io/api/v3/store/inventory',\n  headers: {api_key: 'REPLACE_KEY_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
					},
					{
						"lang": "Shell + Curl",
						"source": "curl --request GET \\\n  --url https://petstore3.swagger.io/api/v3/store/inventory \\\n  --header 'api_key: REPLACE_KEY_VALUE'"
					},
					{
						"lang": "Shell + Httpie",
						"source": "http GET https://petstore3.swagger.io/api/v3/store/inventory \\\n  api_key:REPLACE_KEY_VALUE"
					},
					{
						"lang": "Python + Python3",
						"source": "import http.client\n\nconn = http.client.HTTPSConnection(\"petstore3.swagger.io\")\n\nheaders = { 'api_key': \"REPLACE_KEY_VALUE\" }\n\nconn.request(\"GET\", \"/api/v3/store/inventory\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
					},
					{
						"lang": "Php + Curl",
						"source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://petstore3.swagger.io/api/v3/store/inventory\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"api_key: REPLACE_KEY_VALUE\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
					},
					{
						"lang": "Php + Http1",
						"source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://petstore3.swagger.io/api/v3/store/inventory');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders([\n  'api_key' => 'REPLACE_KEY_VALUE'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
					},
					{
						"lang": "Php + Http2",
						"source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://petstore3.swagger.io/api/v3/store/inventory');\n$request->setRequestMethod('GET');\n$request->setHeaders([\n  'api_key' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
					}
				]
			}
		},
		"/store/order": {
			"post": {
				"tags": [
					"store"
				],
				"summary": "Place an order for a pet",
				"description": "Place a new order in the store",
				"operationId": "placeOrder",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Order"
							}
						},
						"application/xml": {
							"schema": {
								"$ref": "#/components/schemas/Order"
							}
						},
						"application/x-www-form-urlencoded": {
							"schema": {
								"$ref": "#/components/schemas/Order"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "successful operation",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Order"
								}
							}
						}
					},
					"405": {
						"description": "Invalid input"
					}
				},
				"x-codeSamples": [
					{
						"lang": "Node + Request",
						"source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://petstore3.swagger.io/api/v3/store/order',\n  headers: {'content-type': 'application/x-www-form-urlencoded'},\n  body: {\n    id: 10,\n    petId: 198772,\n    quantity: 7,\n    shipDate: '2019-08-24T14:15:22Z',\n    status: 'approved',\n    complete: true\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
					},
					{
						"lang": "Shell + Curl",
						"source": "curl --request POST \\\n  --url https://petstore3.swagger.io/api/v3/store/order \\\n  --header 'content-type: application/x-www-form-urlencoded' \\\n  --data '{\"id\":10,\"petId\":198772,\"quantity\":7,\"shipDate\":\"2019-08-24T14:15:22Z\",\"status\":\"approved\",\"complete\":true}'"
					},
					{
						"lang": "Shell + Httpie",
						"source": "echo '{\"id\":10,\"petId\":198772,\"quantity\":7,\"shipDate\":\"2019-08-24T14:15:22Z\",\"status\":\"approved\",\"complete\":true}' |  \\\n  http POST https://petstore3.swagger.io/api/v3/store/order \\\n  content-type:application/x-www-form-urlencoded"
					},
					{
						"lang": "Python + Python3",
						"source": "import http.client\n\nconn = http.client.HTTPSConnection(\"petstore3.swagger.io\")\n\npayload = \"{\\\"id\\\":10,\\\"petId\\\":198772,\\\"quantity\\\":7,\\\"shipDate\\\":\\\"2019-08-24T14:15:22Z\\\",\\\"status\\\":\\\"approved\\\",\\\"complete\\\":true}\"\n\nheaders = { 'content-type': \"application/x-www-form-urlencoded\" }\n\nconn.request(\"POST\", \"/api/v3/store/order\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
					},
					{
						"lang": "Php + Curl",
						"source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://petstore3.swagger.io/api/v3/store/order\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"id\\\":10,\\\"petId\\\":198772,\\\"quantity\\\":7,\\\"shipDate\\\":\\\"2019-08-24T14:15:22Z\\\",\\\"status\\\":\\\"approved\\\",\\\"complete\\\":true}\",\n  CURLOPT_HTTPHEADER => [\n    \"content-type: application/x-www-form-urlencoded\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
					},
					{
						"lang": "Php + Http1",
						"source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://petstore3.swagger.io/api/v3/store/order');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders([\n  'content-type' => 'application/x-www-form-urlencoded'\n]);\n\n$request->setBody('{\"id\":10,\"petId\":198772,\"quantity\":7,\"shipDate\":\"2019-08-24T14:15:22Z\",\"status\":\"approved\",\"complete\":true}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
					},
					{
						"lang": "Php + Http2",
						"source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"id\":10,\"petId\":198772,\"quantity\":7,\"shipDate\":\"2019-08-24T14:15:22Z\",\"status\":\"approved\",\"complete\":true}');\n\n$request->setRequestUrl('https://petstore3.swagger.io/api/v3/store/order');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders([\n  'content-type' => 'application/x-www-form-urlencoded'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
					}
				]
			}
		},
		"/store/order/{orderId}": {
			"get": {
				"tags": [
					"store"
				],
				"summary": "Find purchase order by ID",
				"description": "For valid response try integer IDs with value <= 5 or > 10. Other values will generate exceptions.",
				"operationId": "getOrderById",
				"parameters": [
					{
						"name": "orderId",
						"in": "path",
						"description": "ID of order that needs to be fetched",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					}
				],
				"responses": {
					"200": {
						"description": "successful operation",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Order"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/Order"
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied"
					},
					"404": {
						"description": "Order not found"
					}
				},
				"x-codeSamples": [
					{
						"lang": "Node + Request",
						"source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://petstore3.swagger.io/api/v3/store/order/%7BorderId%7D'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
					},
					{
						"lang": "Shell + Curl",
						"source": "curl --request GET \\\n  --url https://petstore3.swagger.io/api/v3/store/order/%7BorderId%7D"
					},
					{
						"lang": "Shell + Httpie",
						"source": "http GET https://petstore3.swagger.io/api/v3/store/order/%7BorderId%7D"
					},
					{
						"lang": "Python + Python3",
						"source": "import http.client\n\nconn = http.client.HTTPSConnection(\"petstore3.swagger.io\")\n\nconn.request(\"GET\", \"/api/v3/store/order/%7BorderId%7D\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
					},
					{
						"lang": "Php + Curl",
						"source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://petstore3.swagger.io/api/v3/store/order/%7BorderId%7D\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
					},
					{
						"lang": "Php + Http1",
						"source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://petstore3.swagger.io/api/v3/store/order/%7BorderId%7D');\n$request->setMethod(HTTP_METH_GET);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
					},
					{
						"lang": "Php + Http2",
						"source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://petstore3.swagger.io/api/v3/store/order/%7BorderId%7D');\n$request->setRequestMethod('GET');\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
					}
				]
			},
			"delete": {
				"tags": [
					"store"
				],
				"summary": "Delete purchase order by ID",
				"description": "For valid response try integer IDs with value < 1000. Anything above 1000 or nonintegers will generate API errors",
				"operationId": "deleteOrder",
				"parameters": [
					{
						"name": "orderId",
						"in": "path",
						"description": "ID of the order that needs to be deleted",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					}
				],
				"responses": {
					"400": {
						"description": "Invalid ID supplied"
					},
					"404": {
						"description": "Order not found"
					}
				},
				"x-codeSamples": [
					{
						"lang": "Node + Request",
						"source": "const request = require('request');\n\nconst options = {\n  method: 'DELETE',\n  url: 'https://petstore3.swagger.io/api/v3/store/order/%7BorderId%7D'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
					},
					{
						"lang": "Shell + Curl",
						"source": "curl --request DELETE \\\n  --url https://petstore3.swagger.io/api/v3/store/order/%7BorderId%7D"
					},
					{
						"lang": "Shell + Httpie",
						"source": "http DELETE https://petstore3.swagger.io/api/v3/store/order/%7BorderId%7D"
					},
					{
						"lang": "Python + Python3",
						"source": "import http.client\n\nconn = http.client.HTTPSConnection(\"petstore3.swagger.io\")\n\nconn.request(\"DELETE\", \"/api/v3/store/order/%7BorderId%7D\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
					},
					{
						"lang": "Php + Curl",
						"source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://petstore3.swagger.io/api/v3/store/order/%7BorderId%7D\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"DELETE\",\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
					},
					{
						"lang": "Php + Http1",
						"source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://petstore3.swagger.io/api/v3/store/order/%7BorderId%7D');\n$request->setMethod(HTTP_METH_DELETE);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
					},
					{
						"lang": "Php + Http2",
						"source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://petstore3.swagger.io/api/v3/store/order/%7BorderId%7D');\n$request->setRequestMethod('DELETE');\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
					}
				]
			}
		},
		"/user": {
			"post": {
				"tags": [
					"user"
				],
				"summary": "Create user",
				"description": "This can only be done by the logged in user.",
				"operationId": "createUser",
				"requestBody": {
					"description": "Created user object",
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/User"
							}
						},
						"application/xml": {
							"schema": {
								"$ref": "#/components/schemas/User"
							}
						},
						"application/x-www-form-urlencoded": {
							"schema": {
								"$ref": "#/components/schemas/User"
							}
						}
					}
				},
				"responses": {
					"default": {
						"description": "successful operation",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/User"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/User"
								}
							}
						}
					}
				},
				"x-codeSamples": [
					{
						"lang": "Node + Request",
						"source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://petstore3.swagger.io/api/v3/user',\n  headers: {'content-type': 'application/x-www-form-urlencoded'},\n  body: {\n    id: 10,\n    username: 'theUser',\n    firstName: 'John',\n    lastName: 'James',\n    email: 'john@email.com',\n    password: '12345',\n    phone: '12345',\n    userStatus: 1\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
					},
					{
						"lang": "Shell + Curl",
						"source": "curl --request POST \\\n  --url https://petstore3.swagger.io/api/v3/user \\\n  --header 'content-type: application/x-www-form-urlencoded' \\\n  --data '{\"id\":10,\"username\":\"theUser\",\"firstName\":\"John\",\"lastName\":\"James\",\"email\":\"john@email.com\",\"password\":\"12345\",\"phone\":\"12345\",\"userStatus\":1}'"
					},
					{
						"lang": "Shell + Httpie",
						"source": "echo '{\"id\":10,\"username\":\"theUser\",\"firstName\":\"John\",\"lastName\":\"James\",\"email\":\"john@email.com\",\"password\":\"12345\",\"phone\":\"12345\",\"userStatus\":1}' |  \\\n  http POST https://petstore3.swagger.io/api/v3/user \\\n  content-type:application/x-www-form-urlencoded"
					},
					{
						"lang": "Python + Python3",
						"source": "import http.client\n\nconn = http.client.HTTPSConnection(\"petstore3.swagger.io\")\n\npayload = \"{\\\"id\\\":10,\\\"username\\\":\\\"theUser\\\",\\\"firstName\\\":\\\"John\\\",\\\"lastName\\\":\\\"James\\\",\\\"email\\\":\\\"john@email.com\\\",\\\"password\\\":\\\"12345\\\",\\\"phone\\\":\\\"12345\\\",\\\"userStatus\\\":1}\"\n\nheaders = { 'content-type': \"application/x-www-form-urlencoded\" }\n\nconn.request(\"POST\", \"/api/v3/user\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
					},
					{
						"lang": "Php + Curl",
						"source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://petstore3.swagger.io/api/v3/user\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"id\\\":10,\\\"username\\\":\\\"theUser\\\",\\\"firstName\\\":\\\"John\\\",\\\"lastName\\\":\\\"James\\\",\\\"email\\\":\\\"john@email.com\\\",\\\"password\\\":\\\"12345\\\",\\\"phone\\\":\\\"12345\\\",\\\"userStatus\\\":1}\",\n  CURLOPT_HTTPHEADER => [\n    \"content-type: application/x-www-form-urlencoded\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
					},
					{
						"lang": "Php + Http1",
						"source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://petstore3.swagger.io/api/v3/user');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders([\n  'content-type' => 'application/x-www-form-urlencoded'\n]);\n\n$request->setBody('{\"id\":10,\"username\":\"theUser\",\"firstName\":\"John\",\"lastName\":\"James\",\"email\":\"john@email.com\",\"password\":\"12345\",\"phone\":\"12345\",\"userStatus\":1}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
					},
					{
						"lang": "Php + Http2",
						"source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"id\":10,\"username\":\"theUser\",\"firstName\":\"John\",\"lastName\":\"James\",\"email\":\"john@email.com\",\"password\":\"12345\",\"phone\":\"12345\",\"userStatus\":1}');\n\n$request->setRequestUrl('https://petstore3.swagger.io/api/v3/user');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders([\n  'content-type' => 'application/x-www-form-urlencoded'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
					}
				]
			}
		},
		"/user/createWithList": {
			"post": {
				"tags": [
					"user"
				],
				"summary": "Creates list of users with given input array",
				"description": "Creates list of users with given input array",
				"operationId": "createUsersWithListInput",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "array",
								"items": {
									"$ref": "#/components/schemas/User"
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful operation",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/User"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/User"
								}
							}
						}
					},
					"default": {
						"description": "successful operation"
					}
				},
				"x-codeSamples": [
					{
						"lang": "Node + Request",
						"source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://petstore3.swagger.io/api/v3/user/createWithList',\n  headers: {'content-type': 'application/json'},\n  body: [\n    {\n      id: 10,\n      username: 'theUser',\n      firstName: 'John',\n      lastName: 'James',\n      email: 'john@email.com',\n      password: '12345',\n      phone: '12345',\n      userStatus: 1\n    }\n  ],\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
					},
					{
						"lang": "Shell + Curl",
						"source": "curl --request POST \\\n  --url https://petstore3.swagger.io/api/v3/user/createWithList \\\n  --header 'content-type: application/json' \\\n  --data '[{\"id\":10,\"username\":\"theUser\",\"firstName\":\"John\",\"lastName\":\"James\",\"email\":\"john@email.com\",\"password\":\"12345\",\"phone\":\"12345\",\"userStatus\":1}]'"
					},
					{
						"lang": "Shell + Httpie",
						"source": "echo '[{\"id\":10,\"username\":\"theUser\",\"firstName\":\"John\",\"lastName\":\"James\",\"email\":\"john@email.com\",\"password\":\"12345\",\"phone\":\"12345\",\"userStatus\":1}]' |  \\\n  http POST https://petstore3.swagger.io/api/v3/user/createWithList \\\n  content-type:application/json"
					},
					{
						"lang": "Python + Python3",
						"source": "import http.client\n\nconn = http.client.HTTPSConnection(\"petstore3.swagger.io\")\n\npayload = \"[{\\\"id\\\":10,\\\"username\\\":\\\"theUser\\\",\\\"firstName\\\":\\\"John\\\",\\\"lastName\\\":\\\"James\\\",\\\"email\\\":\\\"john@email.com\\\",\\\"password\\\":\\\"12345\\\",\\\"phone\\\":\\\"12345\\\",\\\"userStatus\\\":1}]\"\n\nheaders = { 'content-type': \"application/json\" }\n\nconn.request(\"POST\", \"/api/v3/user/createWithList\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
					},
					{
						"lang": "Php + Curl",
						"source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://petstore3.swagger.io/api/v3/user/createWithList\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"[{\\\"id\\\":10,\\\"username\\\":\\\"theUser\\\",\\\"firstName\\\":\\\"John\\\",\\\"lastName\\\":\\\"James\\\",\\\"email\\\":\\\"john@email.com\\\",\\\"password\\\":\\\"12345\\\",\\\"phone\\\":\\\"12345\\\",\\\"userStatus\\\":1}]\",\n  CURLOPT_HTTPHEADER => [\n    \"content-type: application/json\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
					},
					{
						"lang": "Php + Http1",
						"source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://petstore3.swagger.io/api/v3/user/createWithList');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders([\n  'content-type' => 'application/json'\n]);\n\n$request->setBody('[{\"id\":10,\"username\":\"theUser\",\"firstName\":\"John\",\"lastName\":\"James\",\"email\":\"john@email.com\",\"password\":\"12345\",\"phone\":\"12345\",\"userStatus\":1}]');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
					},
					{
						"lang": "Php + Http2",
						"source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('[{\"id\":10,\"username\":\"theUser\",\"firstName\":\"John\",\"lastName\":\"James\",\"email\":\"john@email.com\",\"password\":\"12345\",\"phone\":\"12345\",\"userStatus\":1}]');\n\n$request->setRequestUrl('https://petstore3.swagger.io/api/v3/user/createWithList');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders([\n  'content-type' => 'application/json'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
					}
				]
			}
		},
		"/user/login": {
			"get": {
				"tags": [
					"user"
				],
				"summary": "Logs user into the system",
				"description": "",
				"operationId": "loginUser",
				"parameters": [
					{
						"name": "username",
						"in": "query",
						"description": "The user name for login",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "password",
						"in": "query",
						"description": "The password for login in clear text",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "successful operation",
						"headers": {
							"X-Rate-Limit": {
								"description": "calls per hour allowed by the user",
								"schema": {
									"type": "integer",
									"format": "int32"
								}
							},
							"X-Expires-After": {
								"description": "date in UTC when token expires",
								"schema": {
									"type": "string",
									"format": "date-time"
								}
							}
						},
						"content": {
							"application/xml": {
								"schema": {
									"type": "string"
								}
							},
							"application/json": {
								"schema": {
									"type": "string"
								}
							}
						}
					},
					"400": {
						"description": "Invalid username/password supplied"
					}
				},
				"x-codeSamples": [
					{
						"lang": "Node + Request",
						"source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://petstore3.swagger.io/api/v3/user/login',\n  qs: {username: 'SOME_STRING_VALUE', password: 'SOME_STRING_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
					},
					{
						"lang": "Shell + Curl",
						"source": "curl --request GET \\\n  --url 'https://petstore3.swagger.io/api/v3/user/login?username=SOME_STRING_VALUE&password=SOME_STRING_VALUE'"
					},
					{
						"lang": "Shell + Httpie",
						"source": "http GET 'https://petstore3.swagger.io/api/v3/user/login?username=SOME_STRING_VALUE&password=SOME_STRING_VALUE'"
					},
					{
						"lang": "Python + Python3",
						"source": "import http.client\n\nconn = http.client.HTTPSConnection(\"petstore3.swagger.io\")\n\nconn.request(\"GET\", \"/api/v3/user/login?username=SOME_STRING_VALUE&password=SOME_STRING_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
					},
					{
						"lang": "Php + Curl",
						"source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://petstore3.swagger.io/api/v3/user/login?username=SOME_STRING_VALUE&password=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
					},
					{
						"lang": "Php + Http1",
						"source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://petstore3.swagger.io/api/v3/user/login');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData([\n  'username' => 'SOME_STRING_VALUE',\n  'password' => 'SOME_STRING_VALUE'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
					},
					{
						"lang": "Php + Http2",
						"source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://petstore3.swagger.io/api/v3/user/login');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString([\n  'username' => 'SOME_STRING_VALUE',\n  'password' => 'SOME_STRING_VALUE'\n]));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
					}
				]
			}
		},
		"/user/logout": {
			"get": {
				"tags": [
					"user"
				],
				"summary": "Logs out current logged in user session",
				"description": "",
				"operationId": "logoutUser",
				"parameters": [],
				"responses": {
					"default": {
						"description": "successful operation"
					}
				},
				"x-codeSamples": [
					{
						"lang": "Node + Request",
						"source": "const request = require('request');\n\nconst options = {method: 'GET', url: 'https://petstore3.swagger.io/api/v3/user/logout'};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
					},
					{
						"lang": "Shell + Curl",
						"source": "curl --request GET \\\n  --url https://petstore3.swagger.io/api/v3/user/logout"
					},
					{
						"lang": "Shell + Httpie",
						"source": "http GET https://petstore3.swagger.io/api/v3/user/logout"
					},
					{
						"lang": "Python + Python3",
						"source": "import http.client\n\nconn = http.client.HTTPSConnection(\"petstore3.swagger.io\")\n\nconn.request(\"GET\", \"/api/v3/user/logout\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
					},
					{
						"lang": "Php + Curl",
						"source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://petstore3.swagger.io/api/v3/user/logout\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
					},
					{
						"lang": "Php + Http1",
						"source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://petstore3.swagger.io/api/v3/user/logout');\n$request->setMethod(HTTP_METH_GET);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
					},
					{
						"lang": "Php + Http2",
						"source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://petstore3.swagger.io/api/v3/user/logout');\n$request->setRequestMethod('GET');\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
					}
				]
			}
		},
		"/user/{username}": {
			"get": {
				"tags": [
					"user"
				],
				"summary": "Get user by user name",
				"description": "",
				"operationId": "getUserByName",
				"parameters": [
					{
						"name": "username",
						"in": "path",
						"description": "The name that needs to be fetched. Use user1 for testing. ",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "successful operation",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/User"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/User"
								}
							}
						}
					},
					"400": {
						"description": "Invalid username supplied"
					},
					"404": {
						"description": "User not found"
					}
				},
				"x-codeSamples": [
					{
						"lang": "Node + Request",
						"source": "const request = require('request');\n\nconst options = {method: 'GET', url: 'https://petstore3.swagger.io/api/v3/user/%7Busername%7D'};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
					},
					{
						"lang": "Shell + Curl",
						"source": "curl --request GET \\\n  --url https://petstore3.swagger.io/api/v3/user/%7Busername%7D"
					},
					{
						"lang": "Shell + Httpie",
						"source": "http GET https://petstore3.swagger.io/api/v3/user/%7Busername%7D"
					},
					{
						"lang": "Python + Python3",
						"source": "import http.client\n\nconn = http.client.HTTPSConnection(\"petstore3.swagger.io\")\n\nconn.request(\"GET\", \"/api/v3/user/%7Busername%7D\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
					},
					{
						"lang": "Php + Curl",
						"source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://petstore3.swagger.io/api/v3/user/%7Busername%7D\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
					},
					{
						"lang": "Php + Http1",
						"source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://petstore3.swagger.io/api/v3/user/%7Busername%7D');\n$request->setMethod(HTTP_METH_GET);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
					},
					{
						"lang": "Php + Http2",
						"source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://petstore3.swagger.io/api/v3/user/%7Busername%7D');\n$request->setRequestMethod('GET');\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
					}
				]
			},
			"put": {
				"tags": [
					"user"
				],
				"summary": "Update user",
				"description": "This can only be done by the logged in user.",
				"operationId": "updateUser",
				"parameters": [
					{
						"name": "username",
						"in": "path",
						"description": "name that need to be deleted",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"description": "Update an existent user in the store",
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/User"
							}
						},
						"application/xml": {
							"schema": {
								"$ref": "#/components/schemas/User"
							}
						},
						"application/x-www-form-urlencoded": {
							"schema": {
								"$ref": "#/components/schemas/User"
							}
						}
					}
				},
				"responses": {
					"default": {
						"description": "successful operation"
					}
				},
				"x-codeSamples": [
					{
						"lang": "Node + Request",
						"source": "const request = require('request');\n\nconst options = {\n  method: 'PUT',\n  url: 'https://petstore3.swagger.io/api/v3/user/%7Busername%7D',\n  headers: {'content-type': 'application/x-www-form-urlencoded'},\n  body: {\n    id: 10,\n    username: 'theUser',\n    firstName: 'John',\n    lastName: 'James',\n    email: 'john@email.com',\n    password: '12345',\n    phone: '12345',\n    userStatus: 1\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
					},
					{
						"lang": "Shell + Curl",
						"source": "curl --request PUT \\\n  --url https://petstore3.swagger.io/api/v3/user/%7Busername%7D \\\n  --header 'content-type: application/x-www-form-urlencoded' \\\n  --data '{\"id\":10,\"username\":\"theUser\",\"firstName\":\"John\",\"lastName\":\"James\",\"email\":\"john@email.com\",\"password\":\"12345\",\"phone\":\"12345\",\"userStatus\":1}'"
					},
					{
						"lang": "Shell + Httpie",
						"source": "echo '{\"id\":10,\"username\":\"theUser\",\"firstName\":\"John\",\"lastName\":\"James\",\"email\":\"john@email.com\",\"password\":\"12345\",\"phone\":\"12345\",\"userStatus\":1}' |  \\\n  http PUT https://petstore3.swagger.io/api/v3/user/%7Busername%7D \\\n  content-type:application/x-www-form-urlencoded"
					},
					{
						"lang": "Python + Python3",
						"source": "import http.client\n\nconn = http.client.HTTPSConnection(\"petstore3.swagger.io\")\n\npayload = \"{\\\"id\\\":10,\\\"username\\\":\\\"theUser\\\",\\\"firstName\\\":\\\"John\\\",\\\"lastName\\\":\\\"James\\\",\\\"email\\\":\\\"john@email.com\\\",\\\"password\\\":\\\"12345\\\",\\\"phone\\\":\\\"12345\\\",\\\"userStatus\\\":1}\"\n\nheaders = { 'content-type': \"application/x-www-form-urlencoded\" }\n\nconn.request(\"PUT\", \"/api/v3/user/%7Busername%7D\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
					},
					{
						"lang": "Php + Curl",
						"source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://petstore3.swagger.io/api/v3/user/%7Busername%7D\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"PUT\",\n  CURLOPT_POSTFIELDS => \"{\\\"id\\\":10,\\\"username\\\":\\\"theUser\\\",\\\"firstName\\\":\\\"John\\\",\\\"lastName\\\":\\\"James\\\",\\\"email\\\":\\\"john@email.com\\\",\\\"password\\\":\\\"12345\\\",\\\"phone\\\":\\\"12345\\\",\\\"userStatus\\\":1}\",\n  CURLOPT_HTTPHEADER => [\n    \"content-type: application/x-www-form-urlencoded\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
					},
					{
						"lang": "Php + Http1",
						"source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://petstore3.swagger.io/api/v3/user/%7Busername%7D');\n$request->setMethod(HTTP_METH_PUT);\n\n$request->setHeaders([\n  'content-type' => 'application/x-www-form-urlencoded'\n]);\n\n$request->setBody('{\"id\":10,\"username\":\"theUser\",\"firstName\":\"John\",\"lastName\":\"James\",\"email\":\"john@email.com\",\"password\":\"12345\",\"phone\":\"12345\",\"userStatus\":1}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
					},
					{
						"lang": "Php + Http2",
						"source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"id\":10,\"username\":\"theUser\",\"firstName\":\"John\",\"lastName\":\"James\",\"email\":\"john@email.com\",\"password\":\"12345\",\"phone\":\"12345\",\"userStatus\":1}');\n\n$request->setRequestUrl('https://petstore3.swagger.io/api/v3/user/%7Busername%7D');\n$request->setRequestMethod('PUT');\n$request->setBody($body);\n\n$request->setHeaders([\n  'content-type' => 'application/x-www-form-urlencoded'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
					}
				]
			},
			"delete": {
				"tags": [
					"user"
				],
				"summary": "Delete user",
				"description": "This can only be done by the logged in user.",
				"operationId": "deleteUser",
				"parameters": [
					{
						"name": "username",
						"in": "path",
						"description": "The name that needs to be deleted",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"400": {
						"description": "Invalid username supplied"
					},
					"404": {
						"description": "User not found"
					}
				},
				"x-codeSamples": [
					{
						"lang": "Node + Request",
						"source": "const request = require('request');\n\nconst options = {\n  method: 'DELETE',\n  url: 'https://petstore3.swagger.io/api/v3/user/%7Busername%7D'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
					},
					{
						"lang": "Shell + Curl",
						"source": "curl --request DELETE \\\n  --url https://petstore3.swagger.io/api/v3/user/%7Busername%7D"
					},
					{
						"lang": "Shell + Httpie",
						"source": "http DELETE https://petstore3.swagger.io/api/v3/user/%7Busername%7D"
					},
					{
						"lang": "Python + Python3",
						"source": "import http.client\n\nconn = http.client.HTTPSConnection(\"petstore3.swagger.io\")\n\nconn.request(\"DELETE\", \"/api/v3/user/%7Busername%7D\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
					},
					{
						"lang": "Php + Curl",
						"source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://petstore3.swagger.io/api/v3/user/%7Busername%7D\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"DELETE\",\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
					},
					{
						"lang": "Php + Http1",
						"source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://petstore3.swagger.io/api/v3/user/%7Busername%7D');\n$request->setMethod(HTTP_METH_DELETE);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
					},
					{
						"lang": "Php + Http2",
						"source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://petstore3.swagger.io/api/v3/user/%7Busername%7D');\n$request->setRequestMethod('DELETE');\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
					}
				]
			}
		}
	},
	"components": {
		"schemas": {
			"Order": {
				"type": "object",
				"properties": {
					"id": {
						"type": "integer",
						"format": "int64",
						"example": 10
					},
					"petId": {
						"type": "integer",
						"format": "int64",
						"example": 198772
					},
					"quantity": {
						"type": "integer",
						"format": "int32",
						"example": 7
					},
					"shipDate": {
						"type": "string",
						"format": "date-time"
					},
					"status": {
						"type": "string",
						"description": "Order Status",
						"example": "approved",
						"enum": [
							"placed",
							"approved",
							"delivered"
						]
					},
					"complete": {
						"type": "boolean"
					}
				},
				"xml": {
					"name": "order"
				}
			},
			"Customer": {
				"type": "object",
				"properties": {
					"id": {
						"type": "integer",
						"format": "int64",
						"example": 100000
					},
					"username": {
						"type": "string",
						"example": "fehguy"
					},
					"address": {
						"type": "array",
						"xml": {
							"name": "addresses",
							"wrapped": true
						},
						"items": {
							"$ref": "#/components/schemas/Address"
						}
					}
				},
				"xml": {
					"name": "customer"
				}
			},
			"Address": {
				"type": "object",
				"properties": {
					"street": {
						"type": "string",
						"example": "437 Lytton"
					},
					"city": {
						"type": "string",
						"example": "Palo Alto"
					},
					"state": {
						"type": "string",
						"example": "CA"
					},
					"zip": {
						"type": "string",
						"example": "94301"
					}
				},
				"xml": {
					"name": "address"
				}
			},
			"Category": {
				"type": "object",
				"properties": {
					"id": {
						"type": "integer",
						"format": "int64",
						"example": 1
					},
					"name": {
						"type": "string",
						"example": "Dogs"
					}
				},
				"xml": {
					"name": "category"
				}
			},
			"User": {
				"type": "object",
				"properties": {
					"id": {
						"type": "integer",
						"format": "int64",
						"example": 10
					},
					"username": {
						"type": "string",
						"example": "theUser"
					},
					"firstName": {
						"type": "string",
						"example": "John"
					},
					"lastName": {
						"type": "string",
						"example": "James"
					},
					"email": {
						"type": "string",
						"example": "john@email.com"
					},
					"password": {
						"type": "string",
						"example": "12345"
					},
					"phone": {
						"type": "string",
						"example": "12345"
					},
					"userStatus": {
						"type": "integer",
						"description": "User Status",
						"format": "int32",
						"example": 1
					}
				},
				"xml": {
					"name": "user"
				}
			},
			"Tag": {
				"type": "object",
				"properties": {
					"id": {
						"type": "integer",
						"format": "int64"
					},
					"name": {
						"type": "string"
					}
				},
				"xml": {
					"name": "tag"
				}
			},
			"Pet": {
				"required": [
					"name",
					"photoUrls"
				],
				"type": "object",
				"properties": {
					"id": {
						"type": "integer",
						"format": "int64",
						"example": 10
					},
					"name": {
						"type": "string",
						"example": "doggie"
					},
					"category": {
						"$ref": "#/components/schemas/Category"
					},
					"photoUrls": {
						"type": "array",
						"xml": {
							"wrapped": true
						},
						"items": {
							"type": "string",
							"xml": {
								"name": "photoUrl"
							}
						}
					},
					"tags": {
						"type": "array",
						"xml": {
							"wrapped": true
						},
						"items": {
							"$ref": "#/components/schemas/Tag"
						}
					},
					"status": {
						"type": "string",
						"description": "pet status in the store",
						"enum": [
							"available",
							"pending",
							"sold"
						]
					}
				},
				"xml": {
					"name": "pet"
				}
			},
			"ApiResponse": {
				"type": "object",
				"properties": {
					"code": {
						"type": "integer",
						"format": "int32"
					},
					"type": {
						"type": "string"
					},
					"message": {
						"type": "string"
					}
				},
				"xml": {
					"name": "##default"
				}
			}
		},
		"requestBodies": {
			"Pet": {
				"description": "Pet object that needs to be added to the store",
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/Pet"
						}
					},
					"application/xml": {
						"schema": {
							"$ref": "#/components/schemas/Pet"
						}
					}
				}
			},
			"UserArray": {
				"description": "List of user object",
				"content": {
					"application/json": {
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/User"
							}
						}
					}
				}
			}
		},
		"securitySchemes": {
			"petstore_auth": {
				"type": "oauth2",
				"flows": {
					"implicit": {
						"authorizationUrl": "https://petstore3.swagger.io/oauth/authorize",
						"scopes": {
							"write:pets": "modify pets in your account",
							"read:pets": "read your pets"
						}
					}
				}
			},
			"api_key": {
				"type": "apiKey",
				"name": "api_key",
				"in": "header"
			}
		}
	}
}